/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import conectar.conectar;
import static formularios.proveedor.calle;
import static formularios.proveedor.celular;
import static formularios.proveedor.ciudad;
import static formularios.proveedor.razon_social;
import static formularios.proveedor.representante;
import static formularios.proveedor.residencial;
import static formularios.proveedor.rnc;
import static formularios.proveedor.sector;
import static formularios.proveedor.txt_fecha;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Juan
 */

public class buscador_proveedor extends javax.swing.JFrame {
public String modulo="proveedor";

    /**
     * Creates new form buscador_proveedor
     */
    public buscador_proveedor() {
        initComponents();
        cargar();
    }
    
     public buscador_proveedor(String modulo) {
         this.modulo=modulo;
        initComponents();
        cargar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        buscar_proveedor = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        contador_txt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_proveedor = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lenovo\\Desktop\\Proyecto duany\\proyectoVentaO-M\\src\\iconos\\lupa.png")); // NOI18N
        jLabel11.setText("BUSCAR");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 60, 100, 30));

        buscar_proveedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscar_proveedorKeyReleased(evt);
            }
        });
        jPanel1.add(buscar_proveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(114, 62, 710, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("REGISTROS");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 60, -1, 30));

        contador_txt.setEditable(false);
        contador_txt.setBackground(new java.awt.Color(0, 0, 0));
        contador_txt.setForeground(new java.awt.Color(255, 0, 0));
        contador_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contador_txtActionPerformed(evt);
            }
        });
        jPanel1.add(contador_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 60, 90, 30));

        tabla_proveedor.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tabla_proveedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Representante", "Razon social", "RNC", "Calle", "Sector", "Ciudad", "Celular", "Residencial", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_proveedor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_proveedorMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_proveedor);
        if (tabla_proveedor.getColumnModel().getColumnCount() > 0) {
            tabla_proveedor.getColumnModel().getColumn(1).setMinWidth(100);
            tabla_proveedor.getColumnModel().getColumn(1).setMaxWidth(100);
            tabla_proveedor.getColumnModel().getColumn(7).setMinWidth(130);
            tabla_proveedor.getColumnModel().getColumn(7).setMaxWidth(130);
            tabla_proveedor.getColumnModel().getColumn(8).setMinWidth(130);
            tabla_proveedor.getColumnModel().getColumn(8).setMaxWidth(130);
            tabla_proveedor.getColumnModel().getColumn(9).setMinWidth(100);
            tabla_proveedor.getColumnModel().getColumn(9).setMaxWidth(100);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 1010, 230));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lenovo\\Desktop\\Proyecto duany\\proyectoVentaO-M\\src\\iconos\\equipo (3).png")); // NOI18N
        jLabel1.setText("PROVEEDORES REGISTRADOS");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1016, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabla_proveedorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_proveedorMouseClicked
        int fila = tabla_proveedor.getSelectedRow();
        if (fila>=0){
            if(modulo.equals("compras")){
                compra.codigo.setText(tabla_proveedor.getValueAt(fila, 0).toString());
                 compra.proveedor.setText(tabla_proveedor.getValueAt(fila, 1).toString());
              }else if(modulo.equals("articulo")){
             crear_articulo.id_proveedor.setText(tabla_proveedor.getValueAt(fila,0).toString());
                 
                 
            }else{
                 proveedor.idproveedor.setText(tabla_proveedor.getValueAt(fila, 0).toString());
            proveedor.representante.setText(tabla_proveedor.getValueAt(fila, 1).toString());
            proveedor.razon_social.setText(tabla_proveedor.getValueAt(fila, 2).toString());
            proveedor.rnc.setText(tabla_proveedor.getValueAt(fila, 3).toString());
            proveedor.calle.setText(tabla_proveedor.getValueAt(fila, 4).toString());
            sector.setText(tabla_proveedor.getValueAt(fila, 5).toString());
            proveedor.ciudad.setText(tabla_proveedor.getValueAt(fila, 6).toString());
            proveedor.celular.setText(tabla_proveedor.getValueAt(fila, 7).toString().replaceAll("\\-", "").replaceAll("\\ ", ""));
            proveedor.residencial.setText(tabla_proveedor.getValueAt(fila, 8).toString().replaceAll("\\-", "").replaceAll("\\ ", ""));
            
            Date fecha = new Date(tabla_proveedor.getValueAt(fila, 9).toString().split("/")[1]+"/"+tabla_proveedor.getValueAt(fila, 9).toString().split("/")[2]+"/"+tabla_proveedor.getValueAt(fila, 9).toString().split("/")[0]);
             proveedor.txt_fecha.setDate(fecha); 
            }
          
            this.dispose();
        }
      
    }//GEN-LAST:event_tabla_proveedorMouseClicked

    private void buscar_proveedorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscar_proveedorKeyReleased
        filtrar(buscar_proveedor.getText());
    }//GEN-LAST:event_buscar_proveedorKeyReleased

    private void contador_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contador_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contador_txtActionPerformed
  void cargar(){
         DefaultTableModel modelo2 = (DefaultTableModel)tabla_proveedor.getModel();
     modelo2.getDataVector().clear();
        String [] registros = new String [10];
        String sql ="SELECT * FROM proveedor ";
        try {
            int contador=0;
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
                contador++;
                 registros[0]=rs.getString("idproveedor");
                registros[1]=rs.getString("representante");
                registros[2]=rs.getString("razon_social");
                registros[3]=rs.getString("rnc");
                
                  registros[4]=rs.getString("calle");
                  registros[5]=rs.getString("sector");
                  registros[6]=rs.getString("ciudad");


                 String sqlCelular ="SELECT * FROM tabla_proveedor where idproveedor='"+registros[0]+"' and id_tipo_tel=1";
                 Statement stCelular  = cn.createStatement();
                ResultSet rsCelular  = stCelular .executeQuery(sqlCelular);
                
                if(rsCelular.next()){
                    registros[7]=rsCelular.getString("numero");
                }
                
                 String sqlResidencial ="SELECT * FROM tabla_proveedor where idproveedor='"+registros[0]+"' and id_tipo_tel=2";
                 Statement sResidencial  = cn.createStatement();
                ResultSet rsResidencial  = sResidencial.executeQuery(sqlResidencial);
                
                if(rsResidencial.next()){
                    registros[8]=rsResidencial.getString("numero");
                }
                
                   String formato_fecha = rs.getString("fecha_prove").split("-")[2]+"/"+rs.getString("fecha_prove").split("-")[1]+"/"+rs.getString("fecha_prove").split("-")[0];
               registros[9]=formato_fecha;
                     
                            
                     
                
                modelo2.addRow(registros);
               
            }
          tabla_proveedor.setModel(modelo2);
          contador_txt.setText(String.valueOf(contador));
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }
  
  void filtrar(String valor){
         DefaultTableModel modelo2 = (DefaultTableModel)tabla_proveedor.getModel();
         modelo2.setNumRows(0);
        String [] registros = new String [10];
        String sql ="SELECT * FROM proveedor  where CONCAT (idproveedor,'',representante,'',rnc,'',razon_social)LIKE '%"+valor+"%' ";
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
            registros[0]=rs.getString("idproveedor");
                registros[1]=rs.getString("representante");
                registros[2]=rs.getString("razon_social");
                registros[3]=rs.getString("rnc");
                
                  registros[4]=rs.getString("calle");
                  registros[5]=rs.getString("sector");
                  registros[6]=rs.getString("ciudad");


                 String sqlCelular ="SELECT * FROM tabla_proveedor where idproveedor='"+registros[0]+"' and id_tipo_tel=1";
                 Statement stCelular  = cn.createStatement();
                ResultSet rsCelular  = stCelular .executeQuery(sqlCelular);
                
                if(rsCelular.next()){
                    registros[7]=rsCelular.getString("numero");
                }
                
                 String sqlResidencial ="SELECT * FROM tabla_proveedor where idproveedor='"+registros[0]+"' and id_tipo_tel=2";
                 Statement sResidencial  = cn.createStatement();
                ResultSet rsResidencial  = sResidencial.executeQuery(sqlResidencial);
                
                if(rsResidencial.next()){
                    registros[8]=rsResidencial.getString("numero");
                }
                
                   String formato_fecha = rs.getString("fecha_prove").split("-")[2]+"/"+rs.getString("fecha_prove").split("-")[1]+"/"+rs.getString("fecha_prove").split("-")[0];
               registros[9]=formato_fecha;
                     
                            
                     
                
                
                modelo2.addRow(registros);
               
            }
          tabla_proveedor.setModel(modelo2);  
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(buscador_proveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(buscador_proveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(buscador_proveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(buscador_proveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new buscador_proveedor().setVisible(true);
            }
        });
    }
String id = "";
      conectar con = new conectar();
      Connection cn = con.connection();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField buscar_proveedor;
    private javax.swing.JTextField contador_txt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla_proveedor;
    // End of variables declaration//GEN-END:variables
}
